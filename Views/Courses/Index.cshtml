@model IEnumerable<SimpleLMS.Models.Course>

@{
    ViewData["Title"] = "Courses";
}

<div class="min-h-screen px-6 py-12">
    <div class="max-w-7xl mx-auto">
        <!-- Header Section -->
        <div class="text-center mb-12 animate-slide-up">
            <h1 class="text-5xl md:text-6xl font-black mb-6">
                <span class="bg-gradient-to-r from-indigo-400 via-purple-400 to-pink-400 bg-clip-text text-transparent animate-gradient-x">
                    Our Courses
                </span>
            </h1>
            <p class="text-xl text-gray-300 max-w-3xl mx-auto leading-relaxed">
                Discover a world of knowledge with our carefully curated courses designed to help you master new skills and advance your career.
            </p>
        </div>

        <!-- Search and Filter Section -->
        <div class="bg-white/5 backdrop-blur-lg rounded-2xl p-6 mb-8 border border-white/10">
            <div class="flex flex-col md:flex-row gap-4 items-center justify-between">
                <div class="flex-1">
                    <div class="relative">
                        <input type="text" id="searchInput" placeholder="Search courses..." 
                               class="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent">
                        <svg class="absolute right-3 top-3 w-6 h-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                        </svg>
                    </div>
                </div>
                <div class="flex gap-4">
                    <select id="levelFilter" class="px-4 py-3 bg-white/10 border border-white/20 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-indigo-500">
                        <option value="">All Levels</option>
                        <option value="Beginner">Beginner</option>
                        <option value="Intermediate">Intermediate</option>
                        <option value="Advanced">Advanced</option>
                    </select>
                    <select id="durationFilter" class="px-4 py-3 bg-white/10 border border-white/20 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-indigo-500">
                        <option value="">Any Duration</option>
                        <option value="1-5">1-5 hours</option>
                        <option value="6-10">6-10 hours</option>
                        <option value="11+">11+ hours</option>
                    </select>
                </div>
            </div>
        </div>

        <!-- Courses Grid -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            @foreach (var course in Model)
            {
                <div class="group course-card bg-white/5 backdrop-blur-lg rounded-2xl p-6 border border-white/10 hover:border-indigo-500/50 transition-all duration-300 hover:scale-105 hover:shadow-2xl hover:shadow-indigo-500/20">
                    <!-- Course Image -->
                    <div class="relative mb-6">
                        <div class="w-full h-48 bg-gradient-to-br from-indigo-500/20 to-purple-500/20 rounded-xl flex items-center justify-center">
                            @if (!string.IsNullOrEmpty(course.ImageUrl))
                            {
                                <img src="@course.ImageUrl" alt="@course.Title" class="w-full h-full object-cover rounded-xl">
                            }
                            else
                            {
                                <svg class="w-16 h-16 text-indigo-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
                                </svg>
                            }
                        </div>
                        <div class="absolute top-4 right-4">
                            <span class="px-3 py-1 bg-indigo-500/80 backdrop-blur-sm text-white text-sm font-semibold rounded-full">
                                @course.Level
                            </span>
                        </div>
                    </div>

                    <!-- Course Content -->
                    <div class="space-y-4">
                        <h3 class="text-xl font-bold text-white group-hover:text-indigo-300 transition-colors duration-300">
                            @course.Title
                        </h3>
                        <p class="text-gray-300 text-sm line-clamp-3">
                            @course.Description
                        </p>
                        
                        <!-- Course Meta -->
                        <div class="flex items-center justify-between text-sm text-gray-400">
                            <div class="flex items-center space-x-2">
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                </svg>
                                <span>@course.Instructor</span>
                            </div>
                            <div class="flex items-center space-x-2">
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                                <span>@course.Duration hours</span>
                            </div>
                        </div>

                        <!-- Price and Action -->
                        <div class="flex items-center justify-between pt-4 border-t border-white/10">
                            <div class="text-2xl font-bold text-white">
                                @if (course.Price == 0)
                                {
                                    <span class="text-green-400">Free</span>
                                }
                                else
                                {
                                    <span>$@course.Price</span>
                                }
                            </div>
                            <a asp-action="Details" asp-route-id="@course.Id" 
                               class="px-6 py-2 bg-gradient-to-r from-indigo-600 to-purple-600 text-white font-semibold rounded-lg hover:from-indigo-700 hover:to-purple-700 transform hover:scale-105 transition-all duration-300">
                                View Course
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Empty State -->
        @if (!Model.Any())
        {
            <div class="text-center py-12">
                <div class="w-24 h-24 bg-gradient-to-br from-indigo-500/20 to-purple-500/20 rounded-full flex items-center justify-center mx-auto mb-6">
                    <svg class="w-12 h-12 text-indigo-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
                    </svg>
                </div>
                <h3 class="text-2xl font-bold text-white mb-4">No Courses Available</h3>
                <p class="text-gray-400 mb-8">Check back soon for new courses!</p>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Simple search and filter functionality
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('searchInput');
            const levelFilter = document.getElementById('levelFilter');
            const durationFilter = document.getElementById('durationFilter');
            const courseCards = document.querySelectorAll('.course-card');

            function filterCourses() {
                const searchTerm = searchInput.value.toLowerCase();
                const selectedLevel = levelFilter.value;
                const selectedDuration = durationFilter.value;

                courseCards.forEach(card => {
                    const title = card.querySelector('h3').textContent.toLowerCase();
                    const description = card.querySelector('p').textContent.toLowerCase();
                    const level = card.querySelector('.bg-indigo-500\\/80').textContent;
                    const duration = parseInt(card.querySelector('.text-gray-400 span:last-child').textContent);

                    const matchesSearch = title.includes(searchTerm) || description.includes(searchTerm);
                    const matchesLevel = !selectedLevel || level === selectedLevel;
                    const matchesDuration = !selectedDuration || 
                        (selectedDuration === '1-5' && duration <= 5) ||
                        (selectedDuration === '6-10' && duration >= 6 && duration <= 10) ||
                        (selectedDuration === '11+' && duration >= 11);

                    if (matchesSearch && matchesLevel && matchesDuration) {
                        card.style.display = 'block';
                    } else {
                        card.style.display = 'none';
                    }
                });
            }

            searchInput.addEventListener('input', filterCourses);
            levelFilter.addEventListener('change', filterCourses);
            durationFilter.addEventListener('change', filterCourses);
        });
    </script>
} 