@model SimpleLMS.Models.CourseRating
@{
    ViewData["Title"] = $"Rate - {ViewBag.Course.Title}";
    var course = ViewBag.Course as SimpleLMS.Models.Course;
}

<div class="min-h-screen px-6 py-12">
    <div class="max-w-4xl mx-auto">
        <!-- Header -->
        <div class="mb-8">
            <div class="flex items-center justify-between mb-4">
                <div>
                    <h1 class="text-3xl font-bold text-white mb-2">Rate This Course</h1>
                    <p class="text-gray-300">Share your experience and help others make informed decisions</p>
                </div>
                <a asp-controller="Courses" asp-action="Details" asp-route-id="@course.Id" 
                   class="px-4 py-2 bg-white/10 backdrop-blur-md border border-white/20 rounded-lg text-white hover:bg-white/20 transition-colors duration-300">
                    ← Back to Course
                </a>
            </div>
        </div>

        <!-- Course Info -->
        <div class="bg-white/5 backdrop-blur-lg rounded-2xl p-6 border border-white/10 mb-8">
            <div class="flex items-center space-x-4">
                @if (!string.IsNullOrEmpty(course.ImageUrl))
                {
                    <img src="@course.ImageUrl" alt="@course.Title" class="w-16 h-16 object-cover rounded-lg">
                }
                else
                {
                    <div class="w-16 h-16 bg-gradient-to-br from-indigo-500 to-purple-500 rounded-lg flex items-center justify-center">
                        <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
                        </svg>
                    </div>
                }
                <div>
                    <h2 class="text-xl font-semibold text-white">@course.Title</h2>
                    <p class="text-gray-400">@course.Instructor • @course.Duration hours</p>
                </div>
            </div>
        </div>

        <!-- Rating Form -->
        <div class="bg-white/5 backdrop-blur-lg rounded-2xl p-8 border border-white/10">
            <form asp-action="Rate" asp-route-id="@course.Id" method="post">
                <div class="mb-8">
                    <label class="block text-white font-semibold mb-4">How would you rate this course?</label>
                    <div class="flex items-center space-x-2">
                        @for (int i = 1; i <= 5; i++)
                        {
                            <input type="radio" id="rating-@i" name="Rating" value="@i" class="hidden" @(Model?.Rating == i ? "checked" : "")>
                            <label for="rating-@i" class="cursor-pointer">
                                <svg class="w-12 h-12 text-gray-400 hover:text-yellow-400 transition-colors duration-200 @(Model?.Rating >= i ? "text-yellow-400" : "")" fill="currentColor" viewBox="0 0 20 20">
                                    <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                                </svg>
                            </label>
                        }
                    </div>
                    <div class="flex justify-between text-sm text-gray-400 mt-2">
                        <span>Poor</span>
                        <span>Fair</span>
                        <span>Good</span>
                        <span>Very Good</span>
                        <span>Excellent</span>
                    </div>
                    @if (!ViewData.ModelState.IsValid && ViewData.ModelState["Rating"]?.Errors.Count > 0)
                    {
                        <span class="text-red-400 text-sm">@ViewData.ModelState["Rating"].Errors.First().ErrorMessage</span>
                    }
                </div>

                <div class="mb-8">
                    <label for="Feedback" class="block text-white font-semibold mb-4">Share your feedback (optional)</label>
                    <textarea 
                        id="Feedback" 
                        name="Feedback" 
                        rows="6" 
                        class="w-full px-4 py-3 bg-white/10 backdrop-blur-lg border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent resize-none"
                        placeholder="Tell us about your experience with this course. What did you like? What could be improved? Your feedback helps us make our courses better for everyone."
                    >@Model?.Feedback</textarea>
                    @if (!ViewData.ModelState.IsValid && ViewData.ModelState["Feedback"]?.Errors.Count > 0)
                    {
                        <span class="text-red-400 text-sm">@ViewData.ModelState["Feedback"].Errors.First().ErrorMessage</span>
                    }
                    <div class="flex justify-between items-center mt-2">
                        <span class="text-gray-400 text-sm">Your feedback will be visible to other learners</span>
                        <span class="text-gray-400 text-sm" id="char-count">0/1000</span>
                    </div>
                </div>

                <div class="flex items-center justify-between">
                    <div class="text-gray-400 text-sm">
                        <p>Your rating helps other learners make informed decisions</p>
                        <p>You can update your rating anytime</p>
                    </div>
                    <button type="submit" 
                            class="px-8 py-3 bg-gradient-to-r from-indigo-600 to-purple-600 text-white font-semibold rounded-lg hover:from-indigo-700 hover:to-purple-700 transform hover:scale-105 transition-all duration-300">
                        Submit Rating
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    // Character counter for feedback
    const feedbackTextarea = document.getElementById('Feedback');
    const charCount = document.getElementById('char-count');
    
    if (feedbackTextarea && charCount) {
        feedbackTextarea.addEventListener('input', function() {
            const length = this.value.length;
            charCount.textContent = `${length}/1000`;
            
            if (length > 1000) {
                charCount.classList.add('text-red-400');
            } else {
                charCount.classList.remove('text-red-400');
            }
        });
        
        // Initialize counter
        charCount.textContent = `${feedbackTextarea.value.length}/1000`;
    }
    
    // Star rating interaction
    const ratingInputs = document.querySelectorAll('input[name="Rating"]');
    const ratingLabels = document.querySelectorAll('label[for^="rating-"]');
    
    ratingInputs.forEach((input, index) => {
        input.addEventListener('change', function() {
            ratingLabels.forEach((label, labelIndex) => {
                const svg = label.querySelector('svg');
                if (labelIndex < this.value) {
                    svg.classList.add('text-yellow-400');
                    svg.classList.remove('text-gray-400');
                } else {
                    svg.classList.remove('text-yellow-400');
                    svg.classList.add('text-gray-400');
                }
            });
        });
    });
</script> 