@model SimpleLMS.Models.Quiz

@{
    ViewData["Title"] = "Edit Quiz";
}

<div class="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-gray-900 dark:to-gray-800">
    <div class="container mx-auto px-4 py-8">
        <div class="max-w-6xl mx-auto">
            <!-- Header -->
            <div class="mb-8">
                <div class="flex items-center justify-between">
                    <div>
                        <h1 class="text-3xl font-bold text-gray-900 dark:text-white">Edit Quiz</h1>
                        <p class="text-gray-600 dark:text-gray-400 mt-2">@Model.Title</p>
                    </div>
                    <div class="flex space-x-4">
                        <a asp-controller="ContentItem" asp-action="Details" asp-route-id="@Model.ContentItemId" 
                           class="inline-flex items-center px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors">
                            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                            </svg>
                            Back to Content
                        </a>
                        <button onclick="addQuestion()" 
                                class="inline-flex items-center px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors">
                            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                            </svg>
                            Add Question
                        </button>
                    </div>
                </div>
            </div>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="mb-6 p-4 bg-green-500/20 border border-green-500/30 rounded-lg">
                    <div class="flex items-center space-x-3">
                        <svg class="w-5 h-5 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                        </svg>
                        <span class="text-green-400">@TempData["SuccessMessage"]</span>
                    </div>
                </div>
            }

            <!-- Quiz Details Form -->
            <div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 mb-8">
                <div class="p-6 border-b border-gray-200 dark:border-gray-700">
                    <h2 class="text-xl font-semibold text-gray-900 dark:text-white">Quiz Settings</h2>
                </div>
                
                <form asp-action="Edit" method="post" class="p-6 space-y-6">
                    <input type="hidden" asp-for="Id" />
                    <input type="hidden" asp-for="ContentItemId" />
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <!-- Title -->
                        <div>
                            <label asp-for="Title" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                Quiz Title *
                            </label>
                            <input asp-for="Title" type="text" 
                                   class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white">
                            <span asp-validation-for="Title" class="text-red-600 dark:text-red-400 text-sm"></span>
                        </div>

                        <!-- Active Status -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                Status
                            </label>
                            <div class="flex items-center space-x-4">
                                <label class="flex items-center">
                                    <input asp-for="IsActive" type="checkbox" class="rounded border-gray-300 text-blue-600 focus:ring-blue-500">
                                    <span class="ml-2 text-gray-700 dark:text-gray-300">Active</span>
                                </label>
                            </div>
                        </div>
                    </div>

                    <!-- Description -->
                    <div>
                        <label asp-for="Description" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                            Description
                        </label>
                        <textarea asp-for="Description" rows="3"
                                  class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white"></textarea>
                        <span asp-validation-for="Description" class="text-red-600 dark:text-red-400 text-sm"></span>
                    </div>

                    <!-- Quiz Settings -->
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                        <!-- Time Limit -->
                        <div>
                            <label asp-for="TimeLimitMinutes" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                Time Limit (minutes)
                            </label>
                            <input asp-for="TimeLimitMinutes" type="number" min="1" max="180"
                                   class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white">
                            <span asp-validation-for="TimeLimitMinutes" class="text-red-600 dark:text-red-400 text-sm"></span>
                        </div>

                        <!-- Passing Score -->
                        <div>
                            <label asp-for="PassingScore" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                Passing Score (%)
                            </label>
                            <input asp-for="PassingScore" type="number" min="1" max="100"
                                   class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white">
                            <span asp-validation-for="PassingScore" class="text-red-600 dark:text-red-400 text-sm"></span>
                        </div>

                        <!-- Max Attempts -->
                        <div>
                            <label asp-for="MaxAttempts" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                Max Attempts
                            </label>
                            <input asp-for="MaxAttempts" type="number" min="1" max="10"
                                   class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white">
                            <span asp-validation-for="MaxAttempts" class="text-red-600 dark:text-red-400 text-sm"></span>
                        </div>
                    </div>

                    <!-- Save Button -->
                    <div class="flex justify-end pt-6 border-t border-gray-200 dark:border-gray-700">
                        <button type="submit" 
                                class="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:ring-4 focus:ring-blue-300 transition-colors">
                            Save Changes
                        </button>
                    </div>
                </form>
            </div>

            <!-- Questions Section -->
            <div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700">
                <div class="p-6 border-b border-gray-200 dark:border-gray-700">
                    <h2 class="text-xl font-semibold text-gray-900 dark:text-white">Questions (@Model.Questions.Count)</h2>
                    <p class="text-gray-600 dark:text-gray-400 mt-1">Manage quiz questions and answers</p>
                </div>
                
                <div class="p-6">
                    @if (Model.Questions.Any())
                    {
                        <div id="questions-container" class="space-y-6">
                            @foreach (var question in Model.Questions.OrderBy(q => q.Order))
                            {
                                <div class="question-item border border-gray-200 dark:border-gray-700 rounded-lg p-6" data-question-id="@question.Id">
                                    <div class="flex items-center justify-between mb-4">
                                        <h3 class="text-lg font-medium text-gray-900 dark:text-white">Question @question.Order</h3>
                                        <div class="flex space-x-2">
                                            <button onclick="editQuestion(@question.Id)" 
                                                    class="p-2 text-blue-600 hover:bg-blue-50 dark:hover:bg-blue-900/20 rounded-lg transition-colors">
                                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                                                </svg>
                                            </button>
                                            <button onclick="deleteQuestion(@question.Id)" 
                                                    class="p-2 text-red-600 hover:bg-red-50 dark:hover:bg-red-900/20 rounded-lg transition-colors">
                                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                                </svg>
                                            </button>
                                        </div>
                                    </div>
                                    
                                    <div class="mb-4">
                                        <p class="text-gray-900 dark:text-white font-medium">@question.QuestionText</p>
                                        <div class="flex items-center space-x-4 mt-2 text-sm text-gray-600 dark:text-gray-400">
                                            <span>Type: @question.QuestionType</span>
                                            <span>Points: @question.Points</span>
                                            <span>Required: @(question.IsRequired ? "Yes" : "No")</span>
                                        </div>
                                    </div>
                                    
                                    @if (question.Options.Any())
                                    {
                                        <div class="space-y-2">
                                            <p class="text-sm font-medium text-gray-700 dark:text-gray-300">Options:</p>
                                            @foreach (var option in question.Options.OrderBy(o => o.Order))
                                            {
                                                <div class="flex items-center space-x-2">
                                                    <span class="w-2 h-2 rounded-full @(option.IsCorrect ? "bg-green-500" : "bg-gray-300")"></span>
                                                    <span class="text-gray-700 dark:text-gray-300">@option.OptionText</span>
                                                </div>
                                            }
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-12">
                            <svg class="w-12 h-12 text-gray-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                            </svg>
                            <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-2">No Questions Yet</h3>
                            <p class="text-gray-600 dark:text-gray-400 mb-4">Add your first question to get started</p>
                            <button onclick="addQuestion()" 
                                    class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                                </svg>
                                Add First Question
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Question Modal -->
<div id="questionModal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
    <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-white dark:bg-gray-800 rounded-xl shadow-xl max-w-2xl w-full max-h-screen overflow-y-auto">
            <div class="p-6 border-b border-gray-200 dark:border-gray-700">
                <h3 class="text-xl font-semibold text-gray-900 dark:text-white" id="modalTitle">Add Question</h3>
            </div>
            <form id="questionForm" class="p-6 space-y-6">
                <input type="hidden" id="questionId" name="Id" value="0" />
                <input type="hidden" name="QuizId" value="@Model.Id" />
                
                <!-- Question Text -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                        Question Text *
                    </label>
                    <textarea id="questionText" name="QuestionText" rows="3" required
                              class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white"
                              placeholder="Enter your question"></textarea>
                </div>

                <!-- Question Type -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                        Question Type
                    </label>
                    <select id="questionType" name="QuestionType" 
                            class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white">
                        <option value="0">Multiple Choice</option>
                        <option value="1">True/False</option>
                        <option value="2">Short Answer</option>
                        <option value="3">Essay</option>
                    </select>
                </div>

                <!-- Points -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                        Points
                    </label>
                    <input id="questionPoints" name="Points" type="number" min="1" max="10" value="1"
                           class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white">
                </div>

                <!-- Required -->
                <div>
                    <label class="flex items-center">
                        <input id="questionRequired" name="IsRequired" type="checkbox" checked
                               class="rounded border-gray-300 text-blue-600 focus:ring-blue-500">
                        <span class="ml-2 text-gray-700 dark:text-gray-300">Required question</span>
                    </label>
                </div>

                <!-- Options (for Multiple Choice and True/False) -->
                <div id="optionsSection" class="space-y-4">
                    <h4 class="text-lg font-medium text-gray-900 dark:text-white">Options</h4>
                    <div id="optionsContainer" class="space-y-3">
                        <!-- Options will be added here dynamically -->
                    </div>
                    <button type="button" onclick="addOption()" 
                            class="inline-flex items-center px-3 py-2 text-sm bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                        </svg>
                        Add Option
                    </button>
                </div>

                <!-- Modal Actions -->
                <div class="flex items-center justify-end space-x-4 pt-6 border-t border-gray-200 dark:border-gray-700">
                    <button type="button" onclick="closeQuestionModal()" 
                            class="px-4 py-2 text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors">
                        Cancel
                    </button>
                    <button type="submit" 
                            class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
                        Save Question
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function addQuestion() {
            document.getElementById('modalTitle').textContent = 'Add Question';
            document.getElementById('questionId').value = '0';
            document.getElementById('questionText').value = '';
            document.getElementById('questionType').value = '0';
            document.getElementById('questionPoints').value = '1';
            document.getElementById('questionRequired').checked = true;
            
            // Clear options
            const optionsContainer = document.getElementById('optionsContainer');
            optionsContainer.innerHTML = '';
            
            // Add default options for multiple choice
            addOption();
            addOption();
            
            showQuestionModal();
        }

        function editQuestion(questionId) {
            // This would load existing question data
            // For now, we'll just show the modal
            document.getElementById('modalTitle').textContent = 'Edit Question';
            document.getElementById('questionId').value = questionId;
            showQuestionModal();
        }

        function deleteQuestion(questionId) {
            if (confirm('Are you sure you want to delete this question?')) {
                // This would send a delete request
                console.log('Delete question:', questionId);
            }
        }

        function addOption() {
            const optionsContainer = document.getElementById('optionsContainer');
            const optionIndex = optionsContainer.children.length;
            
            const optionDiv = document.createElement('div');
            optionDiv.className = 'flex items-center space-x-3';
            optionDiv.innerHTML = `
                <input type="text" name="Options[${optionIndex}].OptionText" placeholder="Option text" required
                       class="flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white">
                <label class="flex items-center">
                    <input type="checkbox" name="Options[${optionIndex}].IsCorrect" 
                           class="rounded border-gray-300 text-blue-600 focus:ring-blue-500">
                    <span class="ml-2 text-sm text-gray-700 dark:text-gray-300">Correct</span>
                </label>
                <button type="button" onclick="this.parentElement.remove()" 
                        class="p-1 text-red-600 hover:bg-red-50 dark:hover:bg-red-900/20 rounded transition-colors">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            `;
            
            optionsContainer.appendChild(optionDiv);
        }

        function showQuestionModal() {
            document.getElementById('questionModal').classList.remove('hidden');
        }

        function closeQuestionModal() {
            document.getElementById('questionModal').classList.add('hidden');
        }

        // Close modal when clicking outside
        document.getElementById('questionModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeQuestionModal();
            }
        });

        // Handle question type change
        document.getElementById('questionType').addEventListener('change', function() {
            const optionsSection = document.getElementById('optionsSection');
            if (this.value === '0' || this.value === '1') { // Multiple Choice or True/False
                optionsSection.classList.remove('hidden');
            } else {
                optionsSection.classList.add('hidden');
            }
        });
    </script>
} 