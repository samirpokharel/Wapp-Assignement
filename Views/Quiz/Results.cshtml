@model SimpleLMS.Models.Quiz

@{
    ViewData["Title"] = "Quiz Results";
    var attempts = ViewBag.Attempts as List<SimpleLMS.Models.QuizAttempt> ?? new List<SimpleLMS.Models.QuizAttempt>();
    var bestAttempt = ViewBag.BestAttempt as SimpleLMS.Models.QuizAttempt;
}

<div class="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-gray-900 dark:to-gray-800">
    <div class="container mx-auto px-4 py-8">
        <div class="max-w-6xl mx-auto">
            <!-- Header -->
            <div class="mb-8">
                <div class="flex items-center justify-between">
                    <div>
                        <h1 class="text-3xl font-bold text-gray-900 dark:text-white">Quiz Results</h1>
                        <p class="text-gray-600 dark:text-gray-400 mt-2">@Model.Title</p>
                    </div>
                    <a asp-controller="ContentItem" asp-action="Details" asp-route-id="@Model.ContentItemId" 
                       class="inline-flex items-center px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                        </svg>
                        Back to Content
                    </a>
                </div>
            </div>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="mb-6 p-4 bg-green-500/20 border border-green-500/30 rounded-lg">
                    <div class="flex items-center space-x-3">
                        <svg class="w-5 h-5 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                        </svg>
                        <span class="text-green-400">@TempData["SuccessMessage"]</span>
                    </div>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="mb-6 p-4 bg-red-500/20 border border-red-500/30 rounded-lg">
                    <div class="flex items-center space-x-3">
                        <svg class="w-5 h-5 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        <span class="text-red-400">@TempData["ErrorMessage"]</span>
                    </div>
                </div>
            }

            <!-- Quiz Summary -->
            <div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 mb-8">
                <div class="p-6 border-b border-gray-200 dark:border-gray-700">
                    <h2 class="text-xl font-semibold text-gray-900 dark:text-white">Quiz Summary</h2>
                </div>
                <div class="p-6">
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                        <div class="text-center">
                            <div class="text-3xl font-bold text-blue-600 dark:text-blue-400">@Model.Questions.Count</div>
                            <div class="text-gray-600 dark:text-gray-400">Total Questions</div>
                        </div>
                        <div class="text-center">
                            <div class="text-3xl font-bold text-green-600 dark:text-green-400">@Model.PassingScore%</div>
                            <div class="text-gray-600 dark:text-gray-400">Passing Score</div>
                        </div>
                        <div class="text-center">
                            <div class="text-3xl font-bold text-purple-600 dark:text-purple-400">@Model.TimeLimitMinutes</div>
                            <div class="text-gray-600 dark:text-gray-400">Time Limit (min)</div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Best Attempt -->
            @if (bestAttempt != null)
            {
                <div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 mb-8">
                    <div class="p-6 border-b border-gray-200 dark:border-gray-700">
                        <h2 class="text-xl font-semibold text-gray-900 dark:text-white">Best Performance</h2>
                    </div>
                    <div class="p-6">
                        <div class="flex items-center justify-between">
                            <div>
                                <div class="flex items-center space-x-4">
                                    <div class="text-4xl font-bold @(bestAttempt.IsPassed ? "text-green-600 dark:text-green-400" : "text-red-600 dark:text-red-400")">
                                        @bestAttempt.PercentageScore.ToString("F1")%
                                    </div>
                                    <div>
                                        <div class="text-lg font-semibold text-gray-900 dark:text-white">
                                            @(bestAttempt.IsPassed ? "Passed" : "Failed")
                                        </div>
                                        <div class="text-gray-600 dark:text-gray-400">
                                            Score: @bestAttempt.Score/@bestAttempt.TotalPoints points
                                        </div>
                                    </div>
                                </div>
                                <div class="mt-4 text-sm text-gray-600 dark:text-gray-400">
                                    Attempt #@bestAttempt.AttemptNumber â€¢ 
                                    @bestAttempt.CompletedAt?.ToString("MMM dd, yyyy 'at' h:mm tt")
                                </div>
                            </div>
                            <div class="text-right">
                                @if (bestAttempt.IsPassed)
                                {
                                    <div class="inline-flex items-center px-3 py-1 bg-green-100 dark:bg-green-900/20 text-green-800 dark:text-green-400 rounded-full text-sm font-medium">
                                        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                                        </svg>
                                        Passed
                                    </div>
                                }
                                else
                                {
                                    <div class="inline-flex items-center px-3 py-1 bg-red-100 dark:bg-red-900/20 text-red-800 dark:text-red-400 rounded-full text-sm font-medium">
                                        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                                        </svg>
                                        Failed
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }

            <!-- Attempt History -->
            <div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700">
                <div class="p-6 border-b border-gray-200 dark:border-gray-700">
                    <h2 class="text-xl font-semibold text-gray-900 dark:text-white">Attempt History</h2>
                    <p class="text-gray-600 dark:text-gray-400 mt-1">Your previous attempts at this quiz</p>
                </div>
                <div class="p-6">
                    @if (attempts.Any())
                    {
                        <div class="space-y-4">
                            @foreach (var attempt in attempts.OrderByDescending(a => a.CreatedAt))
                            {
                                <div class="border border-gray-200 dark:border-gray-700 rounded-lg p-4 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
                                    <div class="flex items-center justify-between">
                                        <div class="flex items-center space-x-4">
                                            <div class="text-2xl font-bold @(attempt.IsPassed ? "text-green-600 dark:text-green-400" : "text-red-600 dark:text-red-400")">
                                                @attempt.PercentageScore.ToString("F1")%
                                            </div>
                                            <div>
                                                <div class="font-medium text-gray-900 dark:text-white">
                                                    Attempt #@attempt.AttemptNumber
                                                </div>
                                                <div class="text-sm text-gray-600 dark:text-gray-400">
                                                    @attempt.CompletedAt?.ToString("MMM dd, yyyy 'at' h:mm tt")
                                                </div>
                                                <div class="text-sm text-gray-600 dark:text-gray-400">
                                                    Score: @attempt.Score/@attempt.TotalPoints points
                                                </div>
                                            </div>
                                        </div>
                                        <div class="flex items-center space-x-3">
                                            @if (attempt.IsPassed)
                                            {
                                                <span class="inline-flex items-center px-2 py-1 bg-green-100 dark:bg-green-900/20 text-green-800 dark:text-green-400 rounded-full text-xs font-medium">
                                                    Passed
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="inline-flex items-center px-2 py-1 bg-red-100 dark:bg-red-900/20 text-red-800 dark:text-red-400 rounded-full text-xs font-medium">
                                                    Failed
                                                </span>
                                            }
                                            <a href="#" onclick="viewAttemptDetails(@attempt.Id)" 
                                               class="text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300 text-sm font-medium">
                                                View Details
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-8">
                            <svg class="w-12 h-12 text-gray-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                            </svg>
                            <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-2">No Attempts Yet</h3>
                            <p class="text-gray-600 dark:text-gray-400 mb-4">You haven't taken this quiz yet.</p>
                            <a asp-action="Take" asp-route-id="@Model.Id" 
                               class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                                </svg>
                                Take Quiz
                            </a>
                        </div>
                    }
                </div>
            </div>

            <!-- Retake Quiz -->
            @if (attempts.Count < Model.MaxAttempts)
            {
                <div class="mt-8 text-center">
                    <a asp-action="Take" asp-route-id="@Model.Id" 
                       class="inline-flex items-center px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 focus:ring-4 focus:ring-green-300 transition-colors">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                        </svg>
                        Take Quiz Again (@(attempts.Count + 1)/@Model.MaxAttempts attempts)
                    </a>
                </div>
            }
            else
            {
                <div class="mt-8 text-center">
                    <div class="inline-flex items-center px-4 py-2 bg-yellow-100 dark:bg-yellow-900/20 text-yellow-800 dark:text-yellow-400 rounded-lg">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                        </svg>
                        Maximum attempts reached (@Model.MaxAttempts/@Model.MaxAttempts)
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Attempt Details Modal -->
<div id="attemptModal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
    <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-white dark:bg-gray-800 rounded-xl shadow-xl max-w-4xl w-full max-h-screen overflow-y-auto">
            <div class="p-6 border-b border-gray-200 dark:border-gray-700">
                <div class="flex items-center justify-between">
                    <h3 class="text-xl font-semibold text-gray-900 dark:text-white">Attempt Details</h3>
                    <button onclick="closeAttemptModal()" class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-300">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
            </div>
            <div id="attemptDetails" class="p-6">
                <!-- Attempt details will be loaded here -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function viewAttemptDetails(attemptId) {
            // This would typically load attempt details via AJAX
            // For now, we'll show a placeholder
            document.getElementById('attemptDetails').innerHTML = `
                <div class="text-center py-8">
                    <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4"></div>
                    <p class="text-gray-600 dark:text-gray-400">Loading attempt details...</p>
                </div>
            `;
            
            document.getElementById('attemptModal').classList.remove('hidden');
        }

        function closeAttemptModal() {
            document.getElementById('attemptModal').classList.add('hidden');
        }

        // Close modal when clicking outside
        document.getElementById('attemptModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeAttemptModal();
            }
        });
    </script>
} 